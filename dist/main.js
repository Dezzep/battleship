(()=>{"use strict";var e={99:(e,a,r)=>{r.d(a,{Z:()=>l});var t=r(537),n=r.n(t),o=r(645),s=r.n(o)()(n());s.push([e.id,"body{background-color:#3f3f3f}#players-game-board{margin:0 auto;display:grid;grid-template-rows:1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;width:50em;height:50em}#players-game-board .numbers{display:flex;justify-content:space-around;align-items:center}#players-game-board .letters,#players-game-board .A,#players-game-board .B,#players-game-board .C,#players-game-board .D,#players-game-board .E,#players-game-board .F,#players-game-board .G,#players-game-board .H,#players-game-board .I,#players-game-board .J{background-color:rgba(47,70,202,.489);display:grid;grid-template-columns:1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr}#players-game-board .letters div,#players-game-board .A div,#players-game-board .B div,#players-game-board .C div,#players-game-board .D div,#players-game-board .E div,#players-game-board .F div,#players-game-board .G div,#players-game-board .H div,#players-game-board .I div,#players-game-board .J div{border:1px solid #000}#players-game-board .letters div:hover,#players-game-board .A div:hover,#players-game-board .B div:hover,#players-game-board .C div:hover,#players-game-board .D div:hover,#players-game-board .E div:hover,#players-game-board .F div:hover,#players-game-board .G div:hover,#players-game-board .H div:hover,#players-game-board .I div:hover,#players-game-board .J div:hover{background-color:rgba(46,69,201,.35)}#players-game-board .letters p,#players-game-board .letters .letters,#players-game-board .A p,#players-game-board .A .letters,#players-game-board .B p,#players-game-board .B .letters,#players-game-board .C p,#players-game-board .C .letters,#players-game-board .D p,#players-game-board .D .letters,#players-game-board .E p,#players-game-board .E .letters,#players-game-board .F p,#players-game-board .F .letters,#players-game-board .G p,#players-game-board .G .letters,#players-game-board .H p,#players-game-board .H .letters,#players-game-board .I p,#players-game-board .I .letters,#players-game-board .J p,#players-game-board .J .letters{display:flex;justify-items:center;align-items:center;padding:.5em;border-radius:30px;margin-right:auto;margin-left:auto}#players-game-board .ship{background-color:#00c9a7}","",{version:3,sources:["webpack://./src/styles.scss"],names:[],mappings:"AAAA,KACE,wBAAA,CAGF,oBACE,aAAA,CACA,YAAA,CACA,8DAAA,CACA,UAAA,CACA,WAAA,CAIA,6BACE,YAAA,CACA,4BAAA,CACA,kBAAA,CAGF,mQAWE,qCAAA,CACA,YAAA,CACA,iEAAA,CAEA,+SACE,qBAAA,CAGA,iXACE,oCAAA,CAGH,+nBACC,YAAA,CACA,oBAAA,CACA,kBAAA,CACA,YAAA,CAGC,kBAAA,CACA,iBAAA,CACA,gBAAA,CAON,0BACE,wBAAA",sourcesContent:["body{\n  background-color: #3f3f3f;\n}\n\n#players-game-board{\n  margin: 0 auto;\n  display:grid;\n  grid-template-rows:  1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  width:50em;\n  height:50em;\n  \n  \n\n  .numbers{\n    display:flex;\n    justify-content: space-around;\n    align-items: center;    \n  }\n\n  .letters,\n  .A, \n  .B,\n  .C,\n  .D,\n  .E,\n  .F,\n  .G,\n  .H,\n  .I,\n  .J{\n    background-color: rgba(47, 70, 202, 0.489);\n    display:grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n\n    div {\n      border:1px solid black;\n\n\n      &:hover{\n        background-color: rgba(46, 69, 201, 0.350);\n      }\n    }\n     p, .letters{\n      display: flex;\n      justify-items: center;\n      align-items: center;\n      padding:.5em;\n      \n\n       border-radius: 30px;\n       margin-right: auto;\n       margin-left: auto;\n\n\n    \n     }\n  \n  }\n .ship{\n   background-color: #00C9A7;\n }\n}\n\n"],sourceRoot:""}]);const l=s},645:e=>{e.exports=function(e){var a=[];return a.toString=function(){return this.map((function(a){var r="",t=void 0!==a[5];return a[4]&&(r+="@supports (".concat(a[4],") {")),a[2]&&(r+="@media ".concat(a[2]," {")),t&&(r+="@layer".concat(a[5].length>0?" ".concat(a[5]):""," {")),r+=e(a),t&&(r+="}"),a[2]&&(r+="}"),a[4]&&(r+="}"),r})).join("")},a.i=function(e,r,t,n,o){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(t)for(var l=0;l<this.length;l++){var i=this[l][0];null!=i&&(s[i]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);t&&s[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),r&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=r):c[2]=r),n&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=n):c[4]="".concat(n)),a.push(c))}},a}},537:e=>{e.exports=function(e){var a=e[1],r=e[3];if(!r)return a;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),n="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(n," */"),s=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[a].concat(s).concat([o]).join("\n")}return[a].join("\n")}},379:e=>{var a=[];function r(e){for(var r=-1,t=0;t<a.length;t++)if(a[t].identifier===e){r=t;break}return r}function t(e,t){for(var o={},s=[],l=0;l<e.length;l++){var i=e[l],d=t.base?i[0]+t.base:i[0],c=o[d]||0,p="".concat(d," ").concat(c);o[d]=c+1;var m=r(p),u={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==m)a[m].references++,a[m].updater(u);else{var b=n(u,t);t.byIndex=l,a.splice(l,0,{identifier:p,updater:b,references:1})}s.push(p)}return s}function n(e,a){var r=a.domAPI(a);return r.update(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap&&a.supports===e.supports&&a.layer===e.layer)return;r.update(e=a)}else r.remove()}}e.exports=function(e,n){var o=t(e=e||[],n=n||{});return function(e){e=e||[];for(var s=0;s<o.length;s++){var l=r(o[s]);a[l].references--}for(var i=t(e,n),d=0;d<o.length;d++){var c=r(o[d]);0===a[c].references&&(a[c].updater(),a.splice(c,1))}o=i}}},569:e=>{var a={};e.exports=function(e,r){var t=function(e){if(void 0===a[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}a[e]=r}return a[e]}(e);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:e=>{e.exports=function(e){var a=document.createElement("style");return e.setAttributes(a,e.attributes),e.insert(a,e.options),a}},565:(e,a,r)=>{e.exports=function(e){var a=r.nc;a&&e.setAttribute("nonce",a)}},795:e=>{e.exports=function(e){var a=e.insertStyleElement(e);return{update:function(r){!function(e,a,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var n=void 0!==r.layer;n&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,n&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),a.styleTagTransform(t,e,a.options)}(a,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(a)}}}},589:e=>{e.exports=function(e,a){if(a.styleSheet)a.styleSheet.cssText=e;else{for(;a.firstChild;)a.removeChild(a.firstChild);a.appendChild(document.createTextNode(e))}}}},a={};function r(t){var n=a[t];if(void 0!==n)return n.exports;var o=a[t]={id:t,exports:{}};return e[t](o,o.exports,r),o.exports}r.n=e=>{var a=e&&e.__esModule?()=>e.default:()=>e;return r.d(a,{a}),a},r.d=(e,a)=>{for(var t in a)r.o(a,t)&&!r.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:a[t]})},r.o=(e,a)=>Object.prototype.hasOwnProperty.call(e,a),r.nc=void 0,(()=>{var e=r(379),a=r.n(e),t=r(795),n=r.n(t),o=r(569),s=r.n(o),l=r(565),i=r.n(l),d=r(216),c=r.n(d),p=r(589),m=r.n(p),u=r(99),b={};b.styleTagTransform=m(),b.setAttributes=i(),b.insert=s().bind(null,"head"),b.domAPI=n(),b.insertStyleElement=c(),a()(u.Z,b),u.Z&&u.Z.locals&&u.Z.locals;let f=0,A=0;const g=[];function y(e,a){const r=e,t={damage:[],defeated:!1,gameBoardPosition:[]},n=[],o=(e,a)=>{e.length===a&&(t.defeated=!0)};return{possibleHits:(()=>{for(let e=0;e<r;e+=1)n.push(a+e);return n})(),hit:e=>{t.damage.includes(e)||t.damage.push(e),o(t.damage,r)},isSunk:o,shipLength:r,shipsDamage:t,name:a}}function h(){const e=y(5,"carrier"),a=y(4,"battleship"),r=y(3,"submarine"),t=y(3,"cruiser"),n=y(2,"destroyer"),o=[],s=[e,a,r,t,n],l={A:[],B:[],C:[],D:[],E:[],F:[],G:[],H:[],I:[],J:[]};return Object.values(l).forEach((e=>{for(let a=0;a<10;a+=1)e.push(a+1)})),{hitsAndMisses:o,table:l,addShipToTable:(e,a,r)=>{const t=e.shipLength;if(r+e.shipLength>10)return 1;for(let e=r;e<r+t;e+=1)if(a[e].length>1)return 1;return((e,a,r)=>{for(let t=0;t<e.possibleHits.length;t+=1)a[r+t]=`${e.name}${t}`})(e,a,r),0},shipPieces:s,receiveAttack:(e,a)=>{let r,t=e[a];if(e===l.A?r=`A${a}`:e===l.B?r=`B${a}`:e===l.C?r=`C${a}`:e===l.D?r=`D${a}`:e===l.E?r=`E${a}`:e===l.F?r=`F${a}`:e===l.G?r=`G${a}`:e===l.H?r=`H${a}`:e===l.I?r=`I${a}`:e===l.J&&(r=`J${a}`),o.includes(r))return 1;if(o.push(r),e[a].length>1){let e="";return/\d/.test(t)&&(e=t.slice(-1),t=t.slice(0,-1)),(e=>{let a;return s.forEach((r=>r.name===e?(a=r,0):0)),a})(t).hit(e),"hit"}return"miss"}}}const v=h(),C=h();v.addShipToTable(v.shipPieces[0],v.table.A,2),v.addShipToTable(v.shipPieces[1],v.table.B,4),v.addShipToTable(v.shipPieces[2],v.table.C,4),v.addShipToTable(v.shipPieces[3],v.table.F,6),v.addShipToTable(v.shipPieces[4],v.table.I,7),C.addShipToTable(C.shipPieces[0],C.table.A,2),C.addShipToTable(C.shipPieces[1],C.table.B,4),C.addShipToTable(C.shipPieces[2],C.table.C,4),C.addShipToTable(C.shipPieces[3],C.table.F,6),C.addShipToTable(C.shipPieces[4],C.table.I,7);const E=function(e,a){const r=e,t=a;f>1&&(f=0);const n=f;f+=1;const o=()=>{const e=Math.floor(10*Math.random()),a=Math.floor(10*Math.random());let t;0===a?t=r.table.A:1===a?t=r.table.B:2===a?t=r.table.C:3===a?t=r.table.D:4===a?t=r.table.E:5===a?t=r.table.F:6===a?t=r.table.G:7===a?t=r.table.H:8===a?t=r.table.I:9===a&&(t=r.table.J);const n=`${t}:${e}`;return g.includes(n)||g>=100?o():g.push(n),{y:t,x:e}};return{board:r,playersNumber:n,attackEnemy:(e,a)=>{if(A===n){const n=t.receiveAttack(e,a);if(1!==n){if(0===A)A=1;else{const e=o();r.receiveAttack(e.y,e.x),A=0}return"hit"===n?"hit":"miss"}}return 1},enemyBoard:t}}(v,C);function B(e,a){const r=document.createElement("div");let t;r.id="players-game-board",r.className=e,t=a?E.board.table:E.enemyBoard.table,Object.keys(t).forEach(((e,n)=>{const o=document.createElement("div"),s=document.createElement("p");s.innerText=e,s.className="letters",o.append(s),o.className=e,Object.values(t)[n].forEach(((e,r)=>{const t=document.createElement("div");a?e.length>2&&(t.className="ship"):t.className=`attackable-tile ${r}`,o.append(t)})),r.append(o)})),document.body.append(r),(()=>{const e=document.createElement("div");for(let a=0;a<11;a+=1){const r=document.createElement("div");0===a?r.className="hidden":(r.className="numbers",r.innerText=a,r.style.color="black",r.style.background="rgba(47, 70, 202, 0.49)",r.style.padding="0.5em"),e.className="numbers",e.style.background="rgba(47, 70, 202, 0.489)",e.append(r)}r.prepend(e)})()}B("player-board","yes"),B("enemy-board"),document.querySelectorAll(".attackable-tile").forEach((e=>{e.addEventListener("click",(()=>{const a=e.parentElement.className;if(console.log(e.className),e.className.includes("0")){const e=0,r=(e=>"A"===e?E.enemyBoard.table.A:"B"===e?E.enemyBoard.table.B:"C"===e?E.enemyBoard.table.C:"D"===e?E.enemyBoard.table.D:"E"===e?E.enemyBoard.table.E:"F"===e?E.enemyBoard.table.F:"G"===e?E.enemyBoard.table.G:"H"===e?E.enemyBoard.table.H:"I"===e?E.enemyBoard.table.I:"J"===e?E.enemyBoard.table.J:1)(a);console.log(E.attackEnemy(r,e))}}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(()=>{"use strict";var e={99:(e,r,a)=>{a.d(r,{Z:()=>i});var t=a(537),n=a.n(t),o=a(645),s=a.n(o)()(n());s.push([e.id,"body{background-color:#3f3f3f}#players-game-board{display:grid;grid-template-rows:1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;width:50em;height:50em}#players-game-board .numbers{display:flex;justify-content:space-around;align-items:center}#players-game-board .letters,#players-game-board .A,#players-game-board .B,#players-game-board .C,#players-game-board .D,#players-game-board .E,#players-game-board .F,#players-game-board .G,#players-game-board .H,#players-game-board .I,#players-game-board .J{background-color:rgba(47,70,202,.489);display:grid;grid-template-columns:1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr}#players-game-board .letters div,#players-game-board .A div,#players-game-board .B div,#players-game-board .C div,#players-game-board .D div,#players-game-board .E div,#players-game-board .F div,#players-game-board .G div,#players-game-board .H div,#players-game-board .I div,#players-game-board .J div{border:1px solid #000}#players-game-board .letters div:hover,#players-game-board .A div:hover,#players-game-board .B div:hover,#players-game-board .C div:hover,#players-game-board .D div:hover,#players-game-board .E div:hover,#players-game-board .F div:hover,#players-game-board .G div:hover,#players-game-board .H div:hover,#players-game-board .I div:hover,#players-game-board .J div:hover{background-color:rgba(46,69,201,.35)}#players-game-board .letters p,#players-game-board .letters .letters,#players-game-board .A p,#players-game-board .A .letters,#players-game-board .B p,#players-game-board .B .letters,#players-game-board .C p,#players-game-board .C .letters,#players-game-board .D p,#players-game-board .D .letters,#players-game-board .E p,#players-game-board .E .letters,#players-game-board .F p,#players-game-board .F .letters,#players-game-board .G p,#players-game-board .G .letters,#players-game-board .H p,#players-game-board .H .letters,#players-game-board .I p,#players-game-board .I .letters,#players-game-board .J p,#players-game-board .J .letters{display:flex;justify-items:center;align-items:center;padding:.5em;border-radius:30px;margin-right:auto;margin-left:auto}#players-game-board .ship{background-color:#00c9a7}","",{version:3,sources:["webpack://./src/styles.scss"],names:[],mappings:"AAAA,KACE,wBAAA,CAGF,oBACE,YAAA,CACA,8DAAA,CACA,UAAA,CACA,WAAA,CAIA,6BACE,YAAA,CACA,4BAAA,CACA,kBAAA,CAGF,mQAWE,qCAAA,CACA,YAAA,CACA,iEAAA,CAEA,+SACE,qBAAA,CAGA,iXACE,oCAAA,CAGH,+nBACC,YAAA,CACA,oBAAA,CACA,kBAAA,CACA,YAAA,CAGC,kBAAA,CACA,iBAAA,CACA,gBAAA,CAON,0BACE,wBAAA",sourcesContent:["body{\n  background-color: #3f3f3f;\n}\n\n#players-game-board{\n  display:grid;\n  grid-template-rows:  1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  width:50em;\n  height:50em;\n  \n  \n\n  .numbers{\n    display:flex;\n    justify-content: space-around;\n    align-items: center;    \n  }\n\n  .letters,\n  .A, \n  .B,\n  .C,\n  .D,\n  .E,\n  .F,\n  .G,\n  .H,\n  .I,\n  .J{\n    background-color: rgba(47, 70, 202, 0.489);\n    display:grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\n\n    div {\n      border:1px solid black;\n\n\n      &:hover{\n        background-color: rgba(46, 69, 201, 0.350);\n      }\n    }\n     p, .letters{\n      display: flex;\n      justify-items: center;\n      align-items: center;\n      padding:.5em;\n      \n\n       border-radius: 30px;\n       margin-right: auto;\n       margin-left: auto;\n\n\n    \n     }\n  \n  }\n .ship{\n   background-color: #00C9A7;\n }\n}\n\n"],sourceRoot:""}]);const i=s},645:e=>{e.exports=function(e){var r=[];return r.toString=function(){return this.map((function(r){var a="",t=void 0!==r[5];return r[4]&&(a+="@supports (".concat(r[4],") {")),r[2]&&(a+="@media ".concat(r[2]," {")),t&&(a+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),a+=e(r),t&&(a+="}"),r[2]&&(a+="}"),r[4]&&(a+="}"),a})).join("")},r.i=function(e,a,t,n,o){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(t)for(var i=0;i<this.length;i++){var l=this[i][0];null!=l&&(s[l]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);t&&s[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),a&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=a):c[2]=a),n&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=n):c[4]="".concat(n)),r.push(c))}},r}},537:e=>{e.exports=function(e){var r=e[1],a=e[3];if(!a)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),n="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(n," */"),s=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[r].concat(s).concat([o]).join("\n")}return[r].join("\n")}},379:e=>{var r=[];function a(e){for(var a=-1,t=0;t<r.length;t++)if(r[t].identifier===e){a=t;break}return a}function t(e,t){for(var o={},s=[],i=0;i<e.length;i++){var l=e[i],d=t.base?l[0]+t.base:l[0],c=o[d]||0,p="".concat(d," ").concat(c);o[d]=c+1;var u=a(p),m={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)r[u].references++,r[u].updater(m);else{var b=n(m,t);t.byIndex=i,r.splice(i,0,{identifier:p,updater:b,references:1})}s.push(p)}return s}function n(e,r){var a=r.domAPI(r);return a.update(e),function(r){if(r){if(r.css===e.css&&r.media===e.media&&r.sourceMap===e.sourceMap&&r.supports===e.supports&&r.layer===e.layer)return;a.update(e=r)}else a.remove()}}e.exports=function(e,n){var o=t(e=e||[],n=n||{});return function(e){e=e||[];for(var s=0;s<o.length;s++){var i=a(o[s]);r[i].references--}for(var l=t(e,n),d=0;d<o.length;d++){var c=a(o[d]);0===r[c].references&&(r[c].updater(),r.splice(c,1))}o=l}}},569:e=>{var r={};e.exports=function(e,a){var t=function(e){if(void 0===r[e]){var a=document.querySelector(e);if(window.HTMLIFrameElement&&a instanceof window.HTMLIFrameElement)try{a=a.contentDocument.head}catch(e){a=null}r[e]=a}return r[e]}(e);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(a)}},216:e=>{e.exports=function(e){var r=document.createElement("style");return e.setAttributes(r,e.attributes),e.insert(r,e.options),r}},565:(e,r,a)=>{e.exports=function(e){var r=a.nc;r&&e.setAttribute("nonce",r)}},795:e=>{e.exports=function(e){var r=e.insertStyleElement(e);return{update:function(a){!function(e,r,a){var t="";a.supports&&(t+="@supports (".concat(a.supports,") {")),a.media&&(t+="@media ".concat(a.media," {"));var n=void 0!==a.layer;n&&(t+="@layer".concat(a.layer.length>0?" ".concat(a.layer):""," {")),t+=a.css,n&&(t+="}"),a.media&&(t+="}"),a.supports&&(t+="}");var o=a.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(t,e,r.options)}(r,e,a)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)}}}},589:e=>{e.exports=function(e,r){if(r.styleSheet)r.styleSheet.cssText=e;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(e))}}}},r={};function a(t){var n=r[t];if(void 0!==n)return n.exports;var o=r[t]={id:t,exports:{}};return e[t](o,o.exports,a),o.exports}a.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return a.d(r,{a:r}),r},a.d=(e,r)=>{for(var t in r)a.o(r,t)&&!a.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},a.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),a.nc=void 0,(()=>{var e=a(379),r=a.n(e),t=a(795),n=a.n(t),o=a(569),s=a.n(o),i=a(565),l=a.n(i),d=a(216),c=a.n(d),p=a(589),u=a.n(p),m=a(99),b={};b.styleTagTransform=u(),b.setAttributes=l(),b.insert=s().bind(null,"head"),b.domAPI=n(),b.insertStyleElement=c(),r()(m.Z,b),m.Z&&m.Z.locals&&m.Z.locals;let f=0,g=0;const A=[];function y(e,r){const a=e,t={damage:[],defeated:!1,gameBoardPosition:[]},n=[],o=(e,r)=>{e.length===r&&(t.defeated=!0)};return{possibleHits:(()=>{for(let e=0;e<a;e+=1)n.push(r+e);return n})(),hit:e=>{t.damage.includes(e)||t.damage.push(e),o(t.damage,a)},isSunk:o,shipLength:a,shipsDamage:t,name:r}}function h(){const e=y(5,"carrier"),r=y(4,"battleship"),a=y(3,"submarine"),t=y(3,"cruiser"),n=y(2,"destroyer"),o=[],s=[e,r,a,t,n],i={A:[],B:[],C:[],D:[],E:[],F:[],G:[],H:[],I:[],J:[]};return Object.values(i).forEach((e=>{for(let r=0;r<10;r+=1)e.push(r+1)})),{hitsAndMisses:o,table:i,addShipToTable:(e,r,a)=>{const t=e.shipLength;if(a+e.shipLength>10)return 1;for(let e=a;e<a+t;e+=1)if(r[e].length>1)return 1;return((e,r,a)=>{for(let t=0;t<e.possibleHits.length;t+=1)r[a+t]=`${e.name}${t}`})(e,r,a),0},shipPieces:s,receiveAttack:(e,r)=>{let a,t=e[r];if(e===i.A?a=`A${r}`:e===i.B?a=`B${r}`:e===i.C?a=`C${r}`:e===i.D?a=`D${r}`:e===i.E?a=`E${r}`:e===i.F?a=`F${r}`:e===i.G?a=`G${r}`:e===i.H?a=`H${r}`:e===i.I?a=`I${r}`:e===i.J&&(a=`J${r}`),o.includes(a))return 1;if(o.push(a),e[r].length>1){let e="";return/\d/.test(t)&&(e=t.slice(-1),t=t.slice(0,-1)),(e=>{let r;return s.forEach((a=>a.name===e?(r=a,0):0)),r})(t).hit(e),"hit"}return"miss"}}}const v=h(),C=h();v.addShipToTable(v.shipPieces[0],v.table.A,2),v.addShipToTable(v.shipPieces[1],v.table.B,4),v.addShipToTable(v.shipPieces[2],v.table.C,4),v.addShipToTable(v.shipPieces[3],v.table.F,6),v.addShipToTable(v.shipPieces[4],v.table.I,7),C.addShipToTable(C.shipPieces[0],C.table.A,2),C.addShipToTable(C.shipPieces[1],C.table.B,4),C.addShipToTable(C.shipPieces[2],C.table.C,4),C.addShipToTable(C.shipPieces[3],C.table.F,6),C.addShipToTable(C.shipPieces[4],C.table.I,7);const E=function(e,r){const a=e,t=r;f>1&&(f=0);const n=f;f+=1;const o=()=>{const e=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());let t;0===r?t=a.table.A:1===r?t=a.table.B:2===r?t=a.table.C:3===r?t=a.table.D:4===r?t=a.table.E:5===r?t=a.table.F:6===r?t=a.table.G:7===r?t=a.table.H:8===r?t=a.table.I:9===r&&(t=a.table.J);const n=`${t}:${e}`;return A.includes(n)||A>=100?o():A.push(n),{y:t,x:e}};return{board:a,playersNumber:n,attackEnemy:(e,r)=>{if(g===n){const n=t.receiveAttack(e,r);if(1!==n){if(0===g)g=1;else{const e=o();a.receiveAttack(e.y,e.x),g=0}return"hit"===n?"hit":"miss"}}return 1},enemyBoard:t}}(v,C);(()=>{const e=document.createElement("div");e.id="players-game-board";const r=E.board.table;Object.keys(r).forEach(((a,t)=>{const n=document.createElement("div"),o=document.createElement("p");o.innerText=a,o.className="letters",n.append(o),n.className=a,Object.values(r)[t].forEach((e=>{const r=document.createElement("div");e.length>2&&(r.className="ship"),n.append(r)})),e.append(n)})),document.body.append(e),(()=>{const r=document.createElement("div");for(let e=0;e<11;e+=1){const a=document.createElement("div");0===e?a.className="hidden":(a.className="numbers",a.innerText=e,a.style.color="black",a.style.background="rgba(47, 70, 202, 0.49)",a.style.padding="0.5em"),r.className="numbers",r.style.background="rgba(47, 70, 202, 0.489)",r.append(a)}e.prepend(r)})()})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,